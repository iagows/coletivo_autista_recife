// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

///// CONFIGURATION /////
generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

////////// TIPOS COMUNS //////////

/// Contato (ddd, telefone e se est√° associado a telegram/whatsapp)
type Contato {
  ddd        Int
  numero     Int
  isTelegram Boolean @default(false)
  isWhatsapp Boolean @default(false)
}

type Endereco {
  cidade      String
  bairro      String
  logradouro  String
  numero      Int?
  complemento String?
}

type Link {
  url String
}

type Pagamento {
  isParticular Boolean? @default(false)
  isPublico    Boolean? @default(false)
  preco        Float?
  planos       String[]
}

////////// MODELOS //////////

model Admin {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  nome      String    @unique
  email     String    @unique
  last_seen DateTime?
  contatos  Contato[]
}

model Regra {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  texto     String  @unique
  descricao String?
}

model Profissional {
  id             String     @id @default(auto()) @map("_id") @db.ObjectId
  nome           String     @unique
  comentario     String?
  especialidades String[]
  enderecos      Endereco[]
  links          Link[]
  contatos       Contato[]
  pagamento      Pagamento
}

model ConsultorioEscola {
  id             String     @id @default(auto()) @map("_id") @db.ObjectId
  nome           String     @unique
  comentario     String?
  enderecos      Endereco[]
  contatos       Contato[]
  pagamento      Pagamento
  especialidades String[]
}

model Texto {
  id         String @id @default(auto()) @map("_id") @db.ObjectId
  texto      String @unique
  referencia String @unique
}

model EmailToken {
  id     String   @id @default(auto()) @map("_id") @db.ObjectId
  sender String
  when   DateTime
  ip     String
}
